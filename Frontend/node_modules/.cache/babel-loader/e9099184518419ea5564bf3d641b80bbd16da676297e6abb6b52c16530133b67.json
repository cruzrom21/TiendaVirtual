{"ast":null,"code":"const cart = [];\nconst handleCart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n  switch (action.type) {\n    case \"Add\":\n      const existid = state.find(x => x.id);\n      if (existid) {\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        return [...state, {\n          ...product,\n          qty: 1\n        }];\n      }\n      break;\n    case \"Delete\":\n      const exist = exist.find(x => x.id === product.id);\n      if (exist.qty === 1) {\n        return state.filter(x => x.id !== exist.id);\n      } else {\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      }\n      break;\n    default:\n      break;\n  }\n};","map":{"version":3,"names":["cart","handleCart","state","arguments","length","undefined","action","product","payload","type","existid","find","x","id","map","qty","exist","filter"],"sources":["C:/Users/USUARIO/Documents/Proyectos/PruebaTiendaVirtual/tiendavirtual/src/redux/reducer/handleCart.js"],"sourcesContent":["const cart = [];\r\n\r\nconst handleCart = (state = cart, action) => {\r\n    const product = action.payload;\r\n\r\n    switch (action.type) {\r\n        case \"Add\":\r\n            const existid = state.find((x) => x.id);\r\n\r\n            if (existid) {\r\n                return state.map((x) => x.id === product.id ? { ...x, qty: x.qty + 1 } : x);\r\n            } else {\r\n                const product = action.payload;\r\n\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...product,\r\n                        qty: 1\r\n                    }\r\n                ]\r\n            }\r\n            break;\r\n\r\n        case \"Delete\":\r\n            const exist = exist.find((x) => x.id === product.id);\r\n\r\n            if (exist.qty === 1) {\r\n                return state.filter((x) => x.id !== exist.id);\r\n            } else {\r\n                return state.map((x) => x.id === product.id ? { ...x, qty: x.qty + 1 } : x);\r\n            }\r\n            break;\r\n\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAG,SAAAA,CAAA,EAA0B;EAAA,IAAzBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,IAAI;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpC,MAAME,OAAO,GAAGD,MAAM,CAACE,OAAO;EAE9B,QAAQF,MAAM,CAACG,IAAI;IACf,KAAK,KAAK;MACN,MAAMC,OAAO,GAAGR,KAAK,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAAC;MAEvC,IAAIH,OAAO,EAAE;QACT,OAAOR,KAAK,CAACY,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAAC,CAAC;MAC/E,CAAC,MAAM;QACH,MAAML,OAAO,GAAGD,MAAM,CAACE,OAAO;QAE9B,OAAO,CACH,GAAGN,KAAK,EACR;UACI,GAAGK,OAAO;UACVQ,GAAG,EAAE;QACT,CAAC,CACJ;MACL;MACA;IAEJ,KAAK,QAAQ;MACT,MAAMC,KAAK,GAAGA,KAAK,CAACL,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MAEpD,IAAIG,KAAK,CAACD,GAAG,KAAK,CAAC,EAAE;QACjB,OAAOb,KAAK,CAACe,MAAM,CAAEL,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKG,KAAK,CAACH,EAAE,CAAC;MACjD,CAAC,MAAM;QACH,OAAOX,KAAK,CAACY,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAAC,CAAC;MAC/E;MACA;IAGJ;MACI;EAAM;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
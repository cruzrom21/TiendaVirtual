{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nconst cart = [];\nconst sendPost = (product, endpoint) => {\n  _s();\n  const stateCounter = useSelector(state => state.handleCounter);\n  let request;\n  if (product !== null) {\n    request = {\n      ...product,\n      ip: \"\"\n    };\n    request = JSON.stringify(request);\n  } else {\n    request = null;\n  }\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: request\n  };\n  fetch(endpoint, requestOptions).then(response => console.log(response.json())).then(data => console.log(data));\n};\n_s(sendPost, \"TMQdQ28Nt8jZpk7IQsxw9Kdcv4Y=\", false, function () {\n  return [useSelector];\n});\nconst handleCart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADDITEM\":\n      sendPost(action.payload, '../api/cart/add');\n      return [...state, action.payload];\n      break;\n    case \"DELITEM\":\n      const dbCartDel = sendPost(action.payload, '../api/cart/del');\n      if (dbCartDel.status === \"Success\") {\n        return state = state.filter(x => {\n          return x.identification !== action.payload.identification;\n        });\n      } else {\n        return state;\n      }\n      break;\n    case \"CLEARITEM\":\n      const dbCartClear = sendPost(null, '../api/cart/clear');\n      if (dbCartDel.status === \"Success\") {\n        return [];\n      } else {\n        return state;\n      }\n      ;\n      break;\n    default:\n      return state;\n      break;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["useSelector","cart","sendPost","product","endpoint","_s","stateCounter","state","handleCounter","request","ip","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","console","log","json","data","handleCart","arguments","length","undefined","action","type","payload","dbCartDel","status","filter","x","identification","dbCartClear"],"sources":["C:/Users/USUARIO/Documents/Proyectos/PruebaTiendaVirtual/tiendavirtual/src/redux/reducer/handleCart.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\n\r\nconst cart = [];\r\n\r\nconst sendPost = (product, endpoint) => {\r\n    const stateCounter = useSelector((state) => state.handleCounter);\r\n    let request;\r\n\r\n    if(product !== null){\r\n        request = {\r\n            ...product,\r\n            ip: \"\"\r\n        };\r\n\r\n        request = JSON.stringify(request)\r\n    } else {\r\n        request = null;\r\n    }\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: request\r\n    };\r\n\r\n    fetch(endpoint, requestOptions)\r\n        .then(response => console.log(response.json()))\r\n        .then(data => console.log(data));\r\n}\r\n\r\nconst handleCart = (state = cart, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADDITEM\":\r\n            sendPost(action.payload, '../api/cart/add');\r\n\r\n            return [\r\n                ...state,\r\n                action.payload\r\n            ];\r\n            break;\r\n\r\n        case \"DELITEM\":\r\n            const dbCartDel = sendPost(action.payload, '../api/cart/del');\r\n\r\n            if (dbCartDel.status === \"Success\") {\r\n                return state = state.filter((x) => {\r\n                    return x.identification !== action.payload.identification\r\n                });\r\n            } else {\r\n                return state;\r\n            }\r\n            break;\r\n\r\n        case \"CLEARITEM\":\r\n            const dbCartClear = sendPost(null, '../api/cart/clear');\r\n\r\n            if (dbCartDel.status === \"Success\") {\r\n                return [];\r\n            } else {\r\n                return state;\r\n            };\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default handleCart;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AAGzC,MAAMC,IAAI,GAAG,EAAE;AAEf,MAAMC,QAAQ,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EACpC,MAAMC,YAAY,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,aAAa,CAAC;EAChE,IAAIC,OAAO;EAEX,IAAGN,OAAO,KAAK,IAAI,EAAC;IAChBM,OAAO,GAAG;MACN,GAAGN,OAAO;MACVO,EAAE,EAAE;IACR,CAAC;IAEDD,OAAO,GAAGE,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;EACrC,CAAC,MAAM;IACHA,OAAO,GAAG,IAAI;EAClB;EAEA,MAAMI,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEP;EACV,CAAC;EAEDQ,KAAK,CAACb,QAAQ,EAAES,cAAc,CAAC,CAC1BK,IAAI,CAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,EAAE,CAAC,CAAC,CAC9CJ,IAAI,CAACK,IAAI,IAAIH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC,CAAC;AACxC,CAAC;AAAAlB,EAAA,CAxBKH,QAAQ;EAAA,QACWF,WAAW;AAAA;AAyBpC,MAAMwB,UAAU,GAAG,SAAAA,CAAA,EAA0B;EAAA,IAAzBjB,KAAK,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGxB,IAAI;EAAA,IAAE2B,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEpC,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,SAAS;MACV3B,QAAQ,CAAC0B,MAAM,CAACE,OAAO,EAAE,iBAAiB,CAAC;MAE3C,OAAO,CACH,GAAGvB,KAAK,EACRqB,MAAM,CAACE,OAAO,CACjB;MACD;IAEJ,KAAK,SAAS;MACV,MAAMC,SAAS,GAAG7B,QAAQ,CAAC0B,MAAM,CAACE,OAAO,EAAE,iBAAiB,CAAC;MAE7D,IAAIC,SAAS,CAACC,MAAM,KAAK,SAAS,EAAE;QAChC,OAAOzB,KAAK,GAAGA,KAAK,CAAC0B,MAAM,CAAEC,CAAC,IAAK;UAC/B,OAAOA,CAAC,CAACC,cAAc,KAAKP,MAAM,CAACE,OAAO,CAACK,cAAc;QAC7D,CAAC,CAAC;MACN,CAAC,MAAM;QACH,OAAO5B,KAAK;MAChB;MACA;IAEJ,KAAK,WAAW;MACZ,MAAM6B,WAAW,GAAGlC,QAAQ,CAAC,IAAI,EAAE,mBAAmB,CAAC;MAEvD,IAAI6B,SAAS,CAACC,MAAM,KAAK,SAAS,EAAE;QAChC,OAAO,EAAE;MACb,CAAC,MAAM;QACH,OAAOzB,KAAK;MAChB;MAAC;MACD;IAEJ;MACI,OAAOA,KAAK;MACZ;EAAM;AAElB,CAAC;AAED,eAAeiB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const cart = [];\nconst sendPost = async (product, endpoint) => {\n  let request;\n  if (product !== null) {\n    request = {\n      ...product,\n      ip: \"\"\n    };\n    request = JSON.stringify(request);\n  } else {\n    request = null;\n  }\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: request\n  };\n  const response = await fetch(endpoint, requestOptions);\n  const dataResponse = await response.clone().json();\n  return dataResponse;\n};\nconst handleCart = async function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADDITEM\":\n      const dataResponse = await sendPost(action.payload, '../api/cart/add');\n      if (dataResponse.status === \"success\") {\n        return [...state, action.payload];\n      } else {\n        return state;\n      }\n      break;\n    case \"DELITEM\":\n      const dataResponseDel = await sendPost(action.payload, '../api/cart/del');\n      if (dataResponseDel.status === \"success\") {\n        return state = state.filter(x => {\n          return x.identification !== action.payload.identification;\n        });\n      } else {\n        return state;\n      }\n      break;\n    case \"CLEARITEM\":\n      const dataResponseClear = await sendPost(action.payload, '../api/cart/del');\n      if (dataResponseClear.status === \"Success\") {\n        return [];\n      } else {\n        return state;\n      }\n      ;\n      break;\n    default:\n      return state;\n      break;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","sendPost","product","endpoint","request","ip","JSON","stringify","requestOptions","method","headers","body","response","fetch","dataResponse","clone","json","handleCart","state","arguments","length","undefined","action","type","payload","status","dataResponseDel","filter","x","identification","dataResponseClear"],"sources":["C:/Users/USUARIO/Documents/Proyectos/PruebaTiendaVirtual/tiendavirtual/src/redux/reducer/handleCart.js"],"sourcesContent":["const cart = [];\r\n\r\nconst sendPost = async (product, endpoint) => {\r\n    let request;\r\n\r\n    if (product !== null) {\r\n        request = {\r\n            ...product,\r\n            ip: \"\"\r\n        };\r\n\r\n        request = JSON.stringify(request)\r\n    } else {\r\n        request = null;\r\n    }\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: request\r\n    };\r\n\r\n    const response = await fetch(endpoint, requestOptions);\r\n    const dataResponse = await response.clone().json();\r\n\r\n    return dataResponse;\r\n}\r\n\r\nconst handleCart = async (state = cart, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADDITEM\":\r\n            const dataResponse = await sendPost(action.payload, '../api/cart/add');\r\n\r\n            if (dataResponse.status === \"success\") {\r\n                return [\r\n                    ...state,\r\n                    action.payload\r\n                ];\r\n            } else {\r\n                return state;\r\n            }\r\n            break;\r\n\r\n        case \"DELITEM\":\r\n            const dataResponseDel = await sendPost(action.payload, '../api/cart/del');\r\n\r\n            if (dataResponseDel.status === \"success\") {\r\n                return state = state.filter((x) => {\r\n                    return x.identification !== action.payload.identification\r\n                });\r\n            } else {\r\n                return state;\r\n            }\r\n            break;\r\n\r\n        case \"CLEARITEM\":\r\n            const dataResponseClear = await sendPost(action.payload, '../api/cart/del');\r\n\r\n            if (dataResponseClear.status === \"Success\") {\r\n                return [];\r\n            } else {\r\n                return state;\r\n            };\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default handleCart;\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,KAAK;EAC1C,IAAIC,OAAO;EAEX,IAAIF,OAAO,KAAK,IAAI,EAAE;IAClBE,OAAO,GAAG;MACN,GAAGF,OAAO;MACVG,EAAE,EAAE;IACR,CAAC;IAEDD,OAAO,GAAGE,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;EACrC,CAAC,MAAM;IACHA,OAAO,GAAG,IAAI;EAClB;EAEA,MAAMI,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEP;EACV,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACV,QAAQ,EAAEK,cAAc,CAAC;EACtD,MAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,KAAK,EAAE,CAACC,IAAI,EAAE;EAElD,OAAOF,YAAY;AACvB,CAAC;AAED,MAAMG,UAAU,GAAG,eAAAA,CAAA,EAAgC;EAAA,IAAzBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGnB,IAAI;EAAA,IAAEsB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE1C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,SAAS;MACV,MAAMT,YAAY,GAAG,MAAMb,QAAQ,CAACqB,MAAM,CAACE,OAAO,EAAE,iBAAiB,CAAC;MAEtE,IAAIV,YAAY,CAACW,MAAM,KAAK,SAAS,EAAE;QACnC,OAAO,CACH,GAAGP,KAAK,EACRI,MAAM,CAACE,OAAO,CACjB;MACL,CAAC,MAAM;QACH,OAAON,KAAK;MAChB;MACA;IAEJ,KAAK,SAAS;MACV,MAAMQ,eAAe,GAAG,MAAMzB,QAAQ,CAACqB,MAAM,CAACE,OAAO,EAAE,iBAAiB,CAAC;MAEzE,IAAIE,eAAe,CAACD,MAAM,KAAK,SAAS,EAAE;QACtC,OAAOP,KAAK,GAAGA,KAAK,CAACS,MAAM,CAAEC,CAAC,IAAK;UAC/B,OAAOA,CAAC,CAACC,cAAc,KAAKP,MAAM,CAACE,OAAO,CAACK,cAAc;QAC7D,CAAC,CAAC;MACN,CAAC,MAAM;QACH,OAAOX,KAAK;MAChB;MACA;IAEJ,KAAK,WAAW;MACZ,MAAMY,iBAAiB,GAAG,MAAM7B,QAAQ,CAACqB,MAAM,CAACE,OAAO,EAAE,iBAAiB,CAAC;MAE3E,IAAIM,iBAAiB,CAACL,MAAM,KAAK,SAAS,EAAE;QACxC,OAAO,EAAE;MACb,CAAC,MAAM;QACH,OAAOP,KAAK;MAChB;MAAC;MACD;IAEJ;MACI,OAAOA,KAAK;MACZ;EAAM;AAElB,CAAC;AAED,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}